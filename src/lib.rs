#![allow(warnings)]

/* automatically generated by rust-bindgen */

pub const FN_CELLULAR_INDEX_MAX: u32 = 3;
pub const FN_NO_SIMD_FALLBACK: u32 = 0;
pub const FN_SSE2: u32 = 1;
pub const FN_SSE41: u32 = 2;
pub const FN_AVX2: u32 = 3;
pub const FN_AVX512: u32 = 4;
pub const FN_NEON: u32 = 5;
#[repr(C)]
pub struct FastNoiseSIMD__bindgen_vtable(::std::os::raw::c_void);
#[repr(C)]
#[derive(Debug)]
pub struct FastNoiseSIMD {
    pub vtable_: *const FastNoiseSIMD__bindgen_vtable,
    pub m_seed: ::std::os::raw::c_int,
    pub m_frequency: f32,
    pub m_noiseType: FastNoiseSIMD_NoiseType,
    pub m_xScale: f32,
    pub m_yScale: f32,
    pub m_zScale: f32,
    pub m_octaves: ::std::os::raw::c_int,
    pub m_lacunarity: f32,
    pub m_gain: f32,
    pub m_fractalType: FastNoiseSIMD_FractalType,
    pub m_fractalBounding: f32,
    pub m_cellularDistanceFunction: FastNoiseSIMD_CellularDistanceFunction,
    pub m_cellularReturnType: FastNoiseSIMD_CellularReturnType,
    pub m_cellularNoiseLookupType: FastNoiseSIMD_NoiseType,
    pub m_cellularNoiseLookupFrequency: f32,
    pub m_cellularDistanceIndex0: ::std::os::raw::c_int,
    pub m_cellularDistanceIndex1: ::std::os::raw::c_int,
    pub m_cellularJitter: f32,
    pub m_perturbType: FastNoiseSIMD_PerturbType,
    pub m_perturbAmp: f32,
    pub m_perturbFrequency: f32,
    pub m_perturbOctaves: ::std::os::raw::c_int,
    pub m_perturbLacunarity: f32,
    pub m_perturbGain: f32,
    pub m_perturbFractalBounding: f32,
    pub m_perturbNormaliseLength: f32,
}
pub const FastNoiseSIMD_NoiseType_Value: FastNoiseSIMD_NoiseType = 0;
pub const FastNoiseSIMD_NoiseType_ValueFractal: FastNoiseSIMD_NoiseType = 1;
pub const FastNoiseSIMD_NoiseType_Perlin: FastNoiseSIMD_NoiseType = 2;
pub const FastNoiseSIMD_NoiseType_PerlinFractal: FastNoiseSIMD_NoiseType = 3;
pub const FastNoiseSIMD_NoiseType_Simplex: FastNoiseSIMD_NoiseType = 4;
pub const FastNoiseSIMD_NoiseType_SimplexFractal: FastNoiseSIMD_NoiseType = 5;
pub const FastNoiseSIMD_NoiseType_WhiteNoise: FastNoiseSIMD_NoiseType = 6;
pub const FastNoiseSIMD_NoiseType_Cellular: FastNoiseSIMD_NoiseType = 7;
pub const FastNoiseSIMD_NoiseType_Cubic: FastNoiseSIMD_NoiseType = 8;
pub const FastNoiseSIMD_NoiseType_CubicFractal: FastNoiseSIMD_NoiseType = 9;
pub type FastNoiseSIMD_NoiseType = u32;
pub const FastNoiseSIMD_FractalType_FBM: FastNoiseSIMD_FractalType = 0;
pub const FastNoiseSIMD_FractalType_Billow: FastNoiseSIMD_FractalType = 1;
pub const FastNoiseSIMD_FractalType_RigidMulti: FastNoiseSIMD_FractalType = 2;
pub type FastNoiseSIMD_FractalType = u32;
pub const FastNoiseSIMD_PerturbType_None: FastNoiseSIMD_PerturbType = 0;
pub const FastNoiseSIMD_PerturbType_Gradient: FastNoiseSIMD_PerturbType = 1;
pub const FastNoiseSIMD_PerturbType_GradientFractal: FastNoiseSIMD_PerturbType = 2;
pub const FastNoiseSIMD_PerturbType_Normalise: FastNoiseSIMD_PerturbType = 3;
pub const FastNoiseSIMD_PerturbType_Gradient_Normalise: FastNoiseSIMD_PerturbType = 4;
pub const FastNoiseSIMD_PerturbType_GradientFractal_Normalise: FastNoiseSIMD_PerturbType = 5;
pub type FastNoiseSIMD_PerturbType = u32;
pub const FastNoiseSIMD_CellularDistanceFunction_Euclidean: FastNoiseSIMD_CellularDistanceFunction =
    0;
pub const FastNoiseSIMD_CellularDistanceFunction_Manhattan: FastNoiseSIMD_CellularDistanceFunction =
    1;
pub const FastNoiseSIMD_CellularDistanceFunction_Natural: FastNoiseSIMD_CellularDistanceFunction =
    2;
pub type FastNoiseSIMD_CellularDistanceFunction = u32;
pub const FastNoiseSIMD_CellularReturnType_CellValue: FastNoiseSIMD_CellularReturnType = 0;
pub const FastNoiseSIMD_CellularReturnType_Distance: FastNoiseSIMD_CellularReturnType = 1;
pub const FastNoiseSIMD_CellularReturnType_Distance2: FastNoiseSIMD_CellularReturnType = 2;
pub const FastNoiseSIMD_CellularReturnType_Distance2Add: FastNoiseSIMD_CellularReturnType = 3;
pub const FastNoiseSIMD_CellularReturnType_Distance2Sub: FastNoiseSIMD_CellularReturnType = 4;
pub const FastNoiseSIMD_CellularReturnType_Distance2Mul: FastNoiseSIMD_CellularReturnType = 5;
pub const FastNoiseSIMD_CellularReturnType_Distance2Div: FastNoiseSIMD_CellularReturnType = 6;
pub const FastNoiseSIMD_CellularReturnType_NoiseLookup: FastNoiseSIMD_CellularReturnType = 7;
pub const FastNoiseSIMD_CellularReturnType_Distance2Cave: FastNoiseSIMD_CellularReturnType = 8;
pub type FastNoiseSIMD_CellularReturnType = u32;
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD18s_currentSIMDLevelE"]
    pub static mut FastNoiseSIMD_s_currentSIMDLevel: ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD16NewFastNoiseSIMDEi"]
    pub fn FastNoiseSIMD_NewFastNoiseSIMD(seed: ::std::os::raw::c_int) -> *mut FastNoiseSIMD;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD12GetSIMDLevelEv"]
    pub fn FastNoiseSIMD_GetSIMDLevel() -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD12FreeNoiseSetEPf"]
    pub fn FastNoiseSIMD_FreeNoiseSet(noiseSet: *mut f32);
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD11GetEmptySetEi"]
    pub fn FastNoiseSIMD_GetEmptySet(size: ::std::os::raw::c_int) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD11AlignedSizeEi"]
    pub fn FastNoiseSIMD_AlignedSize(size: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD28SetCellularDistance2IndiciesEii"]
    pub fn FastNoiseSIMD_SetCellularDistance2Indicies(
        this: *mut FastNoiseSIMD,
        cellularDistanceIndex0: ::std::os::raw::c_int,
        cellularDistanceIndex1: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD12GetVectorSetEiii"]
    pub fn FastNoiseSIMD_GetVectorSet(
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    ) -> *mut FastNoiseVectorSet;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD20GetSamplingVectorSetEiiii"]
    pub fn FastNoiseSIMD_GetSamplingVectorSet(
        sampleScale: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    ) -> *mut FastNoiseVectorSet;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD13FillVectorSetEP18FastNoiseVectorSetiii"]
    pub fn FastNoiseSIMD_FillVectorSet(
        vectorSet: *mut FastNoiseVectorSet,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD21FillSamplingVectorSetEP18FastNoiseVectorSetiiii"]
    pub fn FastNoiseSIMD_FillSamplingVectorSet(
        vectorSet: *mut FastNoiseVectorSet,
        sampleScale: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    );
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD11GetNoiseSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetNoiseSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD12FillNoiseSetEPfiiiiiif"]
    pub fn FastNoiseSIMD_FillNoiseSet(
        this: *mut FastNoiseSIMD,
        noiseSet: *mut f32,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    );
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD12FillNoiseSetEPfP18FastNoiseVectorSetfff"]
    pub fn FastNoiseSIMD_FillNoiseSet1(
        this: *mut FastNoiseSIMD,
        noiseSet: *mut f32,
        vectorSet: *mut FastNoiseVectorSet,
        xOffset: f32,
        yOffset: f32,
        zOffset: f32,
    );
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD18GetSampledNoiseSetEiiiiiii"]
    pub fn FastNoiseSIMD_GetSampledNoiseSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        sampleScale: ::std::os::raw::c_int,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD16GetWhiteNoiseSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetWhiteNoiseSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD11GetValueSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetValueSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD18GetValueFractalSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetValueFractalSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD12GetPerlinSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetPerlinSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD19GetPerlinFractalSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetPerlinFractalSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD13GetSimplexSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetSimplexSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD20GetSimplexFractalSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetSimplexFractalSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD14GetCellularSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetCellularSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD11GetCubicSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetCubicSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD18GetCubicFractalSetEiiiiiif"]
    pub fn FastNoiseSIMD_GetCubicFractalSet(
        this: *mut FastNoiseSIMD,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32;
}
extern "C" {
    #[link_name = "\u{1}_ZN13FastNoiseSIMD24CalculateFractalBoundingEif"]
    pub fn FastNoiseSIMD_CalculateFractalBounding(octaves: ::std::os::raw::c_int, gain: f32)
        -> f32;
}
impl FastNoiseSIMD {
    #[inline]
    pub unsafe fn NewFastNoiseSIMD(seed: ::std::os::raw::c_int) -> *mut FastNoiseSIMD {
        FastNoiseSIMD_NewFastNoiseSIMD(seed)
    }
    #[inline]
    pub unsafe fn GetSIMDLevel() -> ::std::os::raw::c_int {
        FastNoiseSIMD_GetSIMDLevel()
    }
    #[inline]
    pub unsafe fn FreeNoiseSet(noiseSet: *mut f32) {
        FastNoiseSIMD_FreeNoiseSet(noiseSet)
    }
    #[inline]
    pub unsafe fn GetEmptySet(size: ::std::os::raw::c_int) -> *mut f32 {
        FastNoiseSIMD_GetEmptySet(size)
    }
    #[inline]
    pub unsafe fn AlignedSize(size: ::std::os::raw::c_int) -> ::std::os::raw::c_int {
        FastNoiseSIMD_AlignedSize(size)
    }
    #[inline]
    pub unsafe fn SetCellularDistance2Indicies(
        &mut self,
        cellularDistanceIndex0: ::std::os::raw::c_int,
        cellularDistanceIndex1: ::std::os::raw::c_int,
    ) {
        FastNoiseSIMD_SetCellularDistance2Indicies(
            self,
            cellularDistanceIndex0,
            cellularDistanceIndex1,
        )
    }
    #[inline]
    pub unsafe fn GetVectorSet(
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    ) -> *mut FastNoiseVectorSet {
        FastNoiseSIMD_GetVectorSet(xSize, ySize, zSize)
    }
    #[inline]
    pub unsafe fn GetSamplingVectorSet(
        sampleScale: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    ) -> *mut FastNoiseVectorSet {
        FastNoiseSIMD_GetSamplingVectorSet(sampleScale, xSize, ySize, zSize)
    }
    #[inline]
    pub unsafe fn FillVectorSet(
        vectorSet: *mut FastNoiseVectorSet,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    ) {
        FastNoiseSIMD_FillVectorSet(vectorSet, xSize, ySize, zSize)
    }
    #[inline]
    pub unsafe fn FillSamplingVectorSet(
        vectorSet: *mut FastNoiseVectorSet,
        sampleScale: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
    ) {
        FastNoiseSIMD_FillSamplingVectorSet(vectorSet, sampleScale, xSize, ySize, zSize)
    }
    #[inline]
    pub unsafe fn GetNoiseSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetNoiseSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn FillNoiseSet(
        &mut self,
        noiseSet: *mut f32,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) {
        FastNoiseSIMD_FillNoiseSet(
            self,
            noiseSet,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn FillNoiseSet1(
        &mut self,
        noiseSet: *mut f32,
        vectorSet: *mut FastNoiseVectorSet,
        xOffset: f32,
        yOffset: f32,
        zOffset: f32,
    ) {
        FastNoiseSIMD_FillNoiseSet1(self, noiseSet, vectorSet, xOffset, yOffset, zOffset)
    }
    #[inline]
    pub unsafe fn GetSampledNoiseSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        sampleScale: ::std::os::raw::c_int,
    ) -> *mut f32 {
        FastNoiseSIMD_GetSampledNoiseSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            sampleScale,
        )
    }
    #[inline]
    pub unsafe fn GetWhiteNoiseSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetWhiteNoiseSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetValueSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetValueSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetValueFractalSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetValueFractalSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetPerlinSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetPerlinSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetPerlinFractalSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetPerlinFractalSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetSimplexSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetSimplexSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetSimplexFractalSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetSimplexFractalSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetCellularSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetCellularSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetCubicSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetCubicSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn GetCubicFractalSet(
        &mut self,
        xStart: ::std::os::raw::c_int,
        yStart: ::std::os::raw::c_int,
        zStart: ::std::os::raw::c_int,
        xSize: ::std::os::raw::c_int,
        ySize: ::std::os::raw::c_int,
        zSize: ::std::os::raw::c_int,
        scaleModifier: f32,
    ) -> *mut f32 {
        FastNoiseSIMD_GetCubicFractalSet(
            self,
            xStart,
            yStart,
            zStart,
            xSize,
            ySize,
            zSize,
            scaleModifier,
        )
    }
    #[inline]
    pub unsafe fn CalculateFractalBounding(octaves: ::std::os::raw::c_int, gain: f32) -> f32 {
        FastNoiseSIMD_CalculateFractalBounding(octaves, gain)
    }
}
#[repr(C)]
#[derive(Debug)]
pub struct FastNoiseVectorSet {
    pub size: ::std::os::raw::c_int,
    pub xSet: *mut f32,
    pub ySet: *mut f32,
    pub zSet: *mut f32,
    pub sampleScale: ::std::os::raw::c_int,
    pub sampleSizeX: ::std::os::raw::c_int,
    pub sampleSizeY: ::std::os::raw::c_int,
    pub sampleSizeZ: ::std::os::raw::c_int,
}
extern "C" {
    #[link_name = "\u{1}_ZN18FastNoiseVectorSet4FreeEv"]
    pub fn FastNoiseVectorSet_Free(this: *mut FastNoiseVectorSet);
}
extern "C" {
    #[link_name = "\u{1}_ZN18FastNoiseVectorSet7SetSizeEi"]
    pub fn FastNoiseVectorSet_SetSize(this: *mut FastNoiseVectorSet, _size: ::std::os::raw::c_int);
}
impl FastNoiseVectorSet {
    #[inline]
    pub unsafe fn Free(&mut self) {
        FastNoiseVectorSet_Free(self)
    }
    #[inline]
    pub unsafe fn SetSize(&mut self, _size: ::std::os::raw::c_int) {
        FastNoiseVectorSet_SetSize(self, _size)
    }
}
